{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rig"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MoveFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureBlobFSDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"FolderPath": {
										"value": "@pipeline().parameters.FolderPath_SourceStore",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							]
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureBlobFSSource",
											"recursive": false
										},
										"sink": {
											"type": "AzureBlobFSSink"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "AzureBlobFSDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@pipeline().parameters.FolderPath_SourceStore",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureBlobFSDataDestination1",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@pipeline().parameters.FolderPath_DestinationStore",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteAFile",
									"description": "Delete a file from the source store",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyAFile",
											"dependencyConditions": [
												"Skipped"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "AzureBlobFSDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@pipeline().parameters.FolderPath_SourceStore",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the sub-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"FolderPath_SourceStore": {
						"type": "String",
						"defaultValue": "/staging/temp/2019/11"
					},
					"FolderPath_DestinationStore": {
						"type": "String",
						"defaultValue": "/staging/temp2b/2019/11"
					}
				},
				"folder": {
					"name": "Ext"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureBlobFSDataSource_Folder')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobFSDataSource_File')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobFSDataDestination1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshPBIDataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The pipeline has 3 stages:\n\n1. Grab the secrets from the Azure Key Vault.\n2. Call the AAD authentication service and get the AAD token that we need to call the Power BI REST API.\n3. Use the Power BI REST API to trigger the actual dataset refresh.\n\nRef: https://www.moderndata.ai/2019/05/powerbi-dataset-refresh-using-adf/",
				"activities": [
					{
						"name": "Call dataset refresh",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get AAD Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/',pipeline().parameters.workspaceGuid,'/datasets/',pipeline().parameters.datasetGuid,'/refreshes')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(string(activity('Get AAD Token').output.token_type),' ',string(activity('Get AAD Token').output.access_token))",
									"type": "Expression"
								},
								"Content-Type": "application/json"
							},
							"body": {
								"notifyOption": "NoNotification"
							}
						}
					},
					{
						"name": "Until dataset refresh completion",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Call dataset refresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(first(json(string(activity('Get dataset refresh status').output)).value).status,'Unknown'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait 15 seconds",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 15
									}
								},
								{
									"name": "Get dataset refresh status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait 15 seconds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/',pipeline().parameters.workspaceGuid,'/datasets/',pipeline().parameters.datasetGuid,'/refreshes?$top=1')",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {
											"Authorization": {
												"value": "@concat(string(activity('Get AAD Token').output.token_type),' ',string(activity('Get AAD Token').output.access_token))",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										}
									}
								},
								{
									"name": "Notify_copy1",
									"description": "",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get dataset refresh status",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://rig-notify.azurewebsites.net:443/api/notify/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7wus7W1MpN2EG6taxkR8fZY7x1q0m95DigZHd-zo9zc",
										"method": "POST",
										"headers": {
											"Content-type": "application/json"
										},
										"body": {
											"value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Subject\": \"An error has occurred!\",\n   \"ErrorMessage\": \"The ADF pipeline failed. Please check the activity log.\",\n   \"EmailTo\": \"hiram@fleitasarts.com\"\n}\t",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.03:00:00"
						}
					},
					{
						"name": "If dataset refresh failed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Until dataset refresh completion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(first(json(string(activity('Get dataset refresh status').output)).value).status,'Failed')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "SaveErrorMessages",
									"description": "In case of an error in processing of the dataset, the actual messages are saved in the pipeline variable \"ProcessingErrors\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ProcessingErrors",
										"value": {
											"value": "@string(json(first(json(string(activity('Get dataset refresh status').output)).value).serviceExceptionJson))",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get AAD Token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Secret from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get ClientId from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get TenantId from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',activity('Get TenantId from AKV').output.value,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&resource=https://analysis.windows.net/powerbi/api&client_id=',activity('Get ClientId from AKV').output.value,'&client_secret=',encodeUriComponent(activity('Get Secret from AKV').output.value))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get TenantId from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_TenantId,'/?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get ClientId from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_SPClientId,'/?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get Secret from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_SPSecret,'/?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Notify",
						"description": "",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Call dataset refresh",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://rig-notify.azurewebsites.net:443/api/notify/triggers/manual/invoke?api-version=2020-05-01-preview&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7wus7W1MpN2EG6taxkR8fZY7x1q0m95DigZHd-zo9zc",
							"method": "POST",
							"headers": {
								"Content-type": "application/json"
							},
							"body": {
								"value": "{\n   \"DataFactoryName\": \"@{pipeline().DataFactory}\",\n   \"PipelineName\": \"@{pipeline().Pipeline}\",\n   \"Subject\": \"An error has occurred!\",\n   \"ErrorMessage\": \"The ADF pipeline failed. Please check the activity log.\",\n   \"EmailTo\": \"hiram@fleitasarts.com\"\n}\t",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"SecretName_TenantId": {
						"type": "String",
						"defaultValue": "TenantId"
					},
					"SecretName_SPClientId": {
						"type": "String",
						"defaultValue": "ClientId"
					},
					"SecretName_SPSecret": {
						"type": "String",
						"defaultValue": "ClientSecret"
					},
					"KeyVaultDNSName": {
						"type": "string",
						"defaultValue": "https://keyvaultformyrig.vault.azure.net/"
					},
					"workspaceGuid": {
						"type": "string",
						"defaultValue": "632eaee3-ed58-4902-a71b-21e946c89e4d"
					},
					"datasetGuid": {
						"type": "string",
						"defaultValue": "505761ec-7ad0-46d8-b10f-db8a43b02cf7"
					}
				},
				"variables": {
					"ProcessingErrors": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "50-powerbi"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobFSDataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "lakehiram",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": {
						"value": "@dataset().filename",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().path",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobFSDataDestination1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "lakehiram",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": {
						"value": "@dataset().filename",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().path",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobFSDataDestination2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data destination store.",
				"linkedServiceName": {
					"referenceName": "lakehiram",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"treatEmptyAsNull": true
					},
					"fileName": {
						"value": "@dataset().FileName",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().FolderPath",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobFSDataSource_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the file in the data source store. ",
				"linkedServiceName": {
					"referenceName": "lakehiram",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": {
						"value": "@dataset().filename",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().path",
						"type": "Expression"
					},
					"key": {
						"value": "@dataset().filename",
						"type": "Expression"
					},
					"bucketName": {
						"value": "@dataset().path",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobFSDataSource_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "lakehiram",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": "",
					"folderPath": {
						"value": "@dataset().FolderPath",
						"type": "Expression"
					},
					"key": "",
					"bucketName": {
						"value": "@dataset().FolderPath",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMLService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "eaab21d5-8ecd-4ef0-a0c4-92fac2e22875",
					"resourceGroupName": "hfml",
					"mlWorkspaceName": "hfml",
					"authentication": "MSI"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ext.MoveTable",
				"activities": [
					{
						"name": "MoveTable",
						"description": "exec ext.MoveTable \n    @extDestination ='Organic_4Q18_Prod_Seriatim_Projection',\n    @dboSource      ='Organic_4Q18_Prod_Seriatim_Projection',\n    @extLocation    ='/organic/seriatim/valuation/2018/12/',\n    @extDS          ='hlramerica_raw',\n    @extFF          ='parquet_ff',\n    @printonly      = 0",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ext].[MoveTable]",
							"storedProcedureParameters": {
								"dboSource": {
									"value": {
										"value": "@pipeline().parameters.dboSource",
										"type": "Expression"
									},
									"type": "String"
								},
								"extDestination": {
									"value": {
										"value": "@pipeline().parameters.extDestination",
										"type": "Expression"
									},
									"type": "String"
								},
								"extDS": {
									"value": {
										"value": "@pipeline().parameters.extDS",
										"type": "Expression"
									},
									"type": "String"
								},
								"extFF": {
									"value": {
										"value": "@pipeline().parameters.extFF",
										"type": "Expression"
									},
									"type": "String"
								},
								"extLocation": {
									"value": {
										"value": "@pipeline().parameters.extLocation",
										"type": "Expression"
									},
									"type": "String"
								},
								"printonly": {
									"value": {
										"value": "@pipeline().parameters.printonly",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "hiramdw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"dboSource": {
						"type": "string",
						"defaultValue": "Brock_4Q18_Prod_Seriatim_Projection"
					},
					"extDestination": {
						"type": "string",
						"defaultValue": "Brock_4Q18_Prod_Seriatim_Projection"
					},
					"extDS": {
						"type": "string",
						"defaultValue": "hlramerica_raw"
					},
					"extFF": {
						"type": "string",
						"defaultValue": "parquet_ff"
					},
					"extLocation": {
						"type": "string",
						"defaultValue": "/brock/seriatim/valuation/2018/12/"
					},
					"printonly": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"ExtDestination": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Ext"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveToExt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ext.MoveToExt",
				"activities": [
					{
						"name": "MoveToExt",
						"description": "exec ext.MoveToExt",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[ext].[MoveToExt]"
						},
						"linkedServiceName": {
							"referenceName": "hiramdw",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "NotifyFailed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MoveToExt",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-06.eastus2.logic.azure.com:443/workflows/dead1d5517ac44f7bb4876447aa3f77d/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=g6c5KPne6u73Gi7iDIgF8R0Y6aew5UoVyfnAKB6pPOs",
							"method": "POST",
							"headers": {
								"Content-type": "application/json"
							},
							"body": {
								"value": "@concat('{\n   \"DataFactoryName\": \"',pipeline().DataFactory,'\",\n   \"PipelineName\": \"',pipeline().Pipeline,'\",\n   \"Subject\": \"An error has occurred!\",\n   \"ErrorMessage\": \"The ADF pipeline failed. Please check the activity log at https://adf.azure.com/monitoring/pipelineruns.\",\n   \"EmailTo\": \"',pipeline().parameters.Notify,'\"\n}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "NotifyCompleted",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MoveToExt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-06.eastus2.logic.azure.com:443/workflows/dead1d5517ac44f7bb4876447aa3f77d/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=g6c5KPne6u73Gi7iDIgF8R0Y6aew5UoVyfnAKB6pPOs",
							"method": "POST",
							"headers": {
								"Content-type": "application/json"
							},
							"body": {
								"value": "@concat('{\n   \"DataFactoryName\": \"',pipeline().DataFactory,'\",\n   \"PipelineName\": \"',pipeline().Pipeline,'\",\n   \"Subject\": \"Completed!\",\n   \"ErrorMessage\": \"The ADF pipeline completed.\",\n   \"EmailTo\": \"',pipeline().parameters.Notify,'\"\n}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Notify": {
						"type": "string",
						"defaultValue": "hiram@fleitasarts.com"
					}
				},
				"variables": {
					"ExtDestination": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Ext"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}